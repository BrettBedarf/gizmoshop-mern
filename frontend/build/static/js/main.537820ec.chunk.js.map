{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducers.js","actions/userActions.js","assets/logo-lg.png","components/Header.jsx","components/Footer.jsx","components/Rating.jsx","components/ProductCard.jsx","components/Loader.jsx","components/Message.jsx","screens/HomeScreen.jsx","actions/productActions.js","actions/cartActions.js","components/QuantitySelector.jsx","screens/ProductScreen.jsx","utilities.js","components/CartItem.jsx","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","actions/orderActions.js","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_CLEAR","CART_ADD_REQUEST","CART_ADD_SUCCESS","CART_UPDATE_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEMS","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","cart","cartItems","cartProducts","productId","id","details","newQtyInCart","qtyInCart","qty","updateId","deleteId","cartItemsCopy","JSON","parse","stringify","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","userInfoFromStorage","initialState","middleware","Thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","a","removeItem","Header","useDispatch","history","useHistory","useSelector","Navbar","bg","variant","collapseOnSelect","expand","Container","to","Brand","src","logo","alt","width","height","className","style","display","Toggle","aria-controls","Collapse","Nav","Link","href","NavDropdown","title","Item","Divider","name","onClick","push","aria-hidden","Footer","Row","Col","Rating","rating","reviewCount","defaultProps","ProductCard","Card","_id","Img","image","Body","Title","as","Text","Array","isArray","reviews","length","reduce","acc","cur","numReviews","price","Loader","Spinner","animation","role","margin","Message","children","Alert","HomeScreen","useEffect","axios","get","data","response","message","map","sm","md","lg","xl","saveToStorage","getState","setItem","StyleWrapper","styled","div","Adjuster","img","attrs","props","icon","adjustHandler","QuantitySelector","qtyInStock","maxQty","e","currentQuantity","newQuantity","setQuantity","value","onChange","desiredQty","target","parseInt","ProductScreen","inStock","match","useState","quantity","countInStock","params","Image","fluid","ListGroup","description","color","Button","block","disabled","addToCart","formatMoney","dollarsCents","toFixed","CartItem","xs","span","offset","addQty","cursor","itemId","CartScreen","cartListItems","size","Object","keys","curId","parseFloat","auto","FormContainer","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","Form","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","Control","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Authorization","token","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","Number","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","item","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","index","rounded","amount","onSuccess","paymentResult","console","log","payOrder","isAdmin","deliverOrder","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.537820ec.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_CLEAR = 'PRODUCT_DETAILS_CLEAR';\r\n","export const CART_ADD_REQUEST = 'CART_ADD_REQUEST';\r\nexport const CART_ADD_SUCCESS = 'CART_ADD_SUCCESS';\r\nexport const CART_ADD_FAIL = 'CART_ADD_FAIL';\r\n\r\nexport const CART_LIST_REQUEST = 'CART_LIST_REQUEST';\r\nexport const CART_LIST_SUCCESS = 'CART_LIST_SUCCESS';\r\nexport const CART_LIST_FAIL = 'CART_LIST_FAIL';\r\n\r\nexport const CART_UPDATE_ITEM = 'CART_UPDATE_ITEM';\r\nexport const CART_UPDATE_FAIL = 'CART_UPDATE_FAIL';\r\n\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_REMOVE_FAIL = 'CART_REMOVE_FAIL';\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport Thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducer.js';\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n} from './reducers/userReducer';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\n// Load session state from local torage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\n// Set initial state when store loads\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\nconst middleware = [Thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_CLEAR,\r\n} from '../constants/productConstants.js';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      //sent before starting the fetch from server as a loading flag\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_LIST_FAIL:\r\n      //action will send error message as payload if failed\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      //sent before starting the fetch from server as a loading flag\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      //action will send error message as payload if failed\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_DETAILS_CLEAR:\r\n      return { loading: false, product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_REQUEST,\r\n  CART_ADD_SUCCESS,\r\n  CART_UPDATE_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_CLEAR_ITEMS,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = {\r\n    cartItems: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_REQUEST:\r\n      return { loading: true, cartProducts: [...state.cartItems] };\r\n\r\n    case CART_ADD_SUCCESS:\r\n      let currentQtyInCart;\r\n      const { id: productId, ...details } = action.payload.product;\r\n      // Check if product is already in cart and add quantities if so\r\n      state.cartItems[productId]\r\n        ? (currentQtyInCart = state.cartItems[productId].qtyInCart)\r\n        : (currentQtyInCart = 0);\r\n      let newQtyInCart = currentQtyInCart + action.payload.qty;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        cartItems: {\r\n          ...state.cartItems,\r\n          [productId]: { ...details, qtyInCart: newQtyInCart },\r\n        },\r\n      };\r\n\r\n    case CART_UPDATE_ITEM:\r\n      const { productId: updateId, qty } = action.payload;\r\n      return {\r\n        ...state,\r\n        cartItems: {\r\n          ...state.cartItems,\r\n          [updateId]: { ...state.cartItems[updateId], qtyInCart: qty },\r\n        },\r\n      };\r\n    case CART_REMOVE_ITEM:\r\n      const deleteId = action.payload;\r\n      const cartItemsCopy = JSON.parse(JSON.stringify(state.cartItems));\r\n      delete cartItemsCopy[deleteId];\r\n      return {\r\n        ...state,\r\n        cartItems: { ...cartItemsCopy },\r\n      };\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: {},\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT });\r\n  localStorage.removeItem('userInfo');\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo-lg.ac552982.png\";","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../actions/userActions';\r\nimport logo from '../assets/logo-lg.png';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"white\" variant=\"light\" collapseOnSelect expand=\"md\">\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                src={logo}\r\n                alt=\"\"\r\n                width=\"45\"\r\n                height=\"45\"\r\n                className=\"d-inline-block align-top\"\r\n              />\r\n              <h3 style={{ display: 'inline-block' }}>&nbsp;Gidgets</h3>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\".navbar-toggle\" />\r\n          <Navbar.Collapse aria-controls=\"basic-navbar-nav\">\r\n            {' '}\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              <NavDropdown title=\"Categories\" className=\"navbar-toggle\">\r\n                <NavDropdown.Item href=\"/\">Useless</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/\">Phone</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/\">Accessories</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#/\">All Products</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <LinkContainer to=\"/about\">\r\n                <Nav.Link href=\"#link\">About</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n\r\n          <Navbar.Collapse className=\"navbar-toggle\">\r\n            <Nav className=\"ml-auto\">\r\n              {userInfo ? (\r\n                <NavDropdown\r\n                  title={\r\n                    <span>\r\n                      <i className=\"fas fa-user\"></i>\r\n                      &nbsp;&nbsp;{userInfo.name}\r\n                    </span>\r\n                  }\r\n                  id=\"basic-nav-dropdown\"\r\n                >\r\n                  <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\r\n\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Log Out\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to={userInfo ? '/profile' : '/login'}>\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-user\"></i> &nbsp;\r\n                      {userInfo ? userInfo.name : 'Sign In'}\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>{' '}\r\n                  &nbsp;Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">\r\n            Copyright 2020&copy; Gidgets 'n Things\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ rating, reviewCount }) => {\r\n  return (\r\n    <>\r\n      <div className=\"rating\">\r\n        <div\r\n          className=\"rating-upper\"\r\n          style={{\r\n            width: `${(rating / 5) * 100}%`,\r\n          }}\r\n        >\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n        </div>\r\n        <div className=\"rating-lower\">\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n          <span>★</span>\r\n        </div>\r\n      </div>\r\n      <span className=\"review-count\">({reviewCount} reviews)</span>\r\n    </>\r\n  );\r\n};\r\n\r\nRating.propTypes = {\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nRating.defaultProps = {\r\n  rating: 0,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nconst ProductCard = ({ product }) => {\r\n  return (\r\n    <>\r\n      <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} variant=\"top\" />\r\n        </Link>\r\n        <Card.Body>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Card.Title as=\"div\">\r\n              <h5>\r\n                <strong>{product.name}</strong>\r\n              </h5>\r\n            </Card.Title>\r\n          </Link>\r\n          <Card.Text as=\"div\">\r\n            <Rating\r\n              rating={\r\n                //Array.isArray() covers undefined and null values\r\n                Array.isArray(product.reviews) && product.reviews.length\r\n                  ? product.reviews.reduce((acc, cur) => acc + cur.rating)\r\n                  : product.rating\r\n              }\r\n              reviewCount={\r\n                //Array.isArray() covers undefined and null values\r\n                Array.isArray(product.reviews) && product.reviews.length\r\n                  ? product.reviews.length\r\n                  : product.numReviews\r\n              }\r\n            />\r\n          </Card.Text>\r\n          <Card.Text as=\"h4\">${product.price}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\"></span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport ProductCard from '../components/ProductCard';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n  //get redux dispatch function\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h4>Hot Products</h4>\r\n      {/* display loading while waiting for products to lead or error. \r\n          if successfull display latest products*/}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <ProductCard product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_CLEAR,\r\n} from '../constants/productConstants.js';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    //update state to requesting data\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    //fetch data and dispatch\r\n    const { data } = await axios.get('/api/products');\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    //update state to requesting data\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    //fetch data and dispatch\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearProductDetails = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_CLEAR });\r\n};\r\n","import {\r\n  CART_ADD_REQUEST,\r\n  CART_ADD_SUCCESS,\r\n  CART_ADD_FAIL,\r\n  CART_UPDATE_ITEM,\r\n  CART_UPDATE_FAIL,\r\n  CART_REMOVE_ITEM,\r\n  CART_CLEAR_ITEMS,\r\n  CART_REMOVE_FAIL,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\n// PLACEHOLDER so don't have to setup db calls yet\r\nlet isLoggedIn = false;\r\n\r\nconst addToCart = (productDetails, qty) => async (dispatch, getState) => {\r\n  try {\r\n    /*  If user is logged in, we want to persist the cart\r\n        in db and should update state as requesting before sending \r\n        that request. If not logged in, no need to update to state\r\n        with the request status since locally adding to cart is just\r\n        a state update itself.\r\n            \r\n        Note - we should validate there is still enough in stock but\r\n        can do that during checkout when most important*/\r\n\r\n    if (isLoggedIn) {\r\n      //update state to pushing request\r\n      dispatch({\r\n        type: CART_ADD_REQUEST,\r\n      });\r\n      // TODO:post to db\r\n    }\r\n\r\n    dispatch({\r\n      type: CART_ADD_SUCCESS,\r\n      payload: {\r\n        product: productDetails,\r\n        qty: qty,\r\n      },\r\n    });\r\n\r\n    //save current cart state to local storage\r\n    saveToStorage(getState);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateQuantity = (productId, qty) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CART_UPDATE_ITEM,\r\n      payload: {\r\n        productId: productId,\r\n        qty: qty,\r\n      },\r\n    });\r\n    saveToStorage(getState);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst removeItem = (itemId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CART_REMOVE_ITEM, payload: itemId });\r\n    saveToStorage(getState);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_REMOVE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst clearCart = () => async (dispatch, getState) => {\r\n  dispatch({ type: CART_CLEAR_ITEMS });\r\n  saveToStorage(getState);\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  // localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n  saveToStorage(getState);\r\n};\r\n\r\nconst saveToStorage = (getState) => {\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport { addToCart, updateQuantity, clearCart, removeItem };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleWrapper = styled.div`\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n  input {\r\n    width: 30%;\r\n    text-align: center;\r\n    margin-right: 1 rem;\r\n  }\r\n`;\r\n\r\nconst QuantitySelector = (props) => {\r\n  // const qtyInStock = useSelector(\r\n  //   (state) => state.productDetails.product.countInStock\r\n  // );\r\n  const qtyInStock = props.maxQty;\r\n  function incrementQuantity(e) {\r\n    let newQuantity;\r\n    //treat falsy as 0\r\n    if (props.currentQuantity) {\r\n      if (qtyInStock > props.currentQuantity) {\r\n        newQuantity = props.currentQuantity + 1;\r\n      } else {\r\n        newQuantity = props.currentQuantity;\r\n      }\r\n    } else newQuantity = 1;\r\n\r\n    props.setQuantity(newQuantity);\r\n  }\r\n\r\n  function decrementQuantity(e) {\r\n    if (props.currentQuantity > 0) {\r\n      let newQuantity = props.currentQuantity - 1 || 1;\r\n      props.setQuantity(newQuantity);\r\n    }\r\n  }\r\n\r\n  function typeQuantity({ target: { value: desiredQty } }) {\r\n    //set numbers and empty string only\r\n    if (desiredQty === '') {\r\n      props.setQuantity('');\r\n    } else if (parseInt(desiredQty)) {\r\n      desiredQty <= qtyInStock\r\n        ? props.setQuantity(parseInt(desiredQty))\r\n        : props.setQuantity(qtyInStock);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyleWrapper>\r\n      <Adjuster\r\n        icon=\"/images/decrease.png\"\r\n        adjustHandler={decrementQuantity}\r\n      ></Adjuster>\r\n      <input\r\n        type=\"text\"\r\n        name=\"qty\"\r\n        id=\"qty-input\"\r\n        value={props.currentQuantity}\r\n        onChange={typeQuantity}\r\n      />\r\n      <Adjuster\r\n        icon=\"/images/increase.png\"\r\n        adjustHandler={incrementQuantity}\r\n      ></Adjuster>\r\n    </StyleWrapper>\r\n  );\r\n};\r\n\r\nconst Adjuster = styled.img.attrs((props) => ({\r\n  src: props.icon,\r\n  onClick: props.adjustHandler,\r\n}))`\r\n  /* padding: 0px 2rem; */\r\n  cursor: pointer;\r\n  &:nth-of-type(1) {\r\n    padding-right: 1rem;\r\n  }\r\n  &:nth-of-type(2) {\r\n    padding-left: 1rem;\r\n  }\r\n  width: 2rem;\r\n`;\r\n\r\nexport default QuantitySelector;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {\r\n  listProductDetails,\r\n  clearProductDetails,\r\n} from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nimport QuantitySelector from '../components/QuantitySelector';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const maxQty = product ? product.countInStock : 0;\r\n\r\n  useEffect(() => {\r\n    if (!product.id || product.id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n    }\r\n    //clear product from state on unmount\r\n    return () => {\r\n      dispatch(clearProductDetails());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, match]);\r\n\r\n  let inStock;\r\n  if (product) {\r\n    //product won't exist if there's an error fetching\r\n    inStock = product.countInStock === 0 ? false : true;\r\n  }\r\n\r\n  const addToCartHandler = (e) => {\r\n    dispatch(addToCart(product, quantity));\r\n    history.push('/cart');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Back button link to home */}\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {/* Display loading icon, error message, or fetched product details\r\n\t\tdepending on state */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} fluid></Image>\r\n          </Col>\r\n          <Col md={6}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n                <Rating\r\n                  rating={product.rating}\r\n                  reviewCount={product.numReviews}\r\n                ></Rating>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>{product.description}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {/* Conditionally display quantity selector or out of stock*/}\r\n                {!inStock ? (\r\n                  <span style={{ color: 'red' }}>Out of Stock!</span>\r\n                ) : (\r\n                  <QuantitySelector\r\n                    currentQuantity={quantity}\r\n                    setQuantity={setQuantity}\r\n                    maxQty={maxQty}\r\n                  />\r\n                )}{' '}\r\n                {inStock && quantity === maxQty && (\r\n                  <span>\r\n                    <i>Max quantity available is {maxQty}</i>\r\n                  </span>\r\n                )}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  block\r\n                  disabled={!inStock ? true : false}\r\n                  onClick={addToCartHandler}\r\n                >\r\n                  {' '}\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","const formatMoney = (dollarsCents) => {\r\n  return dollarsCents.toFixed(2);\r\n};\r\n\r\nexport { formatMoney };\r\n","import React from 'react';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport QuantitySelector from './QuantitySelector';\r\nimport { formatMoney } from '../utilities';\r\nimport { updateQuantity, removeItem } from '../actions/cartActions';\r\n\r\nexport default function CartItem(props) {\r\n  const { _id, name, price, image, countInStock, qtyInCart } = props.product;\r\n\r\n  const dispatch = useDispatch();\r\n  const dispatchWithProduct = (addQty) => {\r\n    dispatch(updateQuantity(_id, addQty));\r\n  };\r\n\r\n  const handleRemoveButton = (e) => {\r\n    dispatch(removeItem(_id));\r\n  };\r\n\r\n  return (\r\n    <Row className=\"align-items-center justify-content-between\">\r\n      <Col xs={3} md={2} className=\"align-items-center\">\r\n        <Link to={`/product/${_id}`}>\r\n          <Image src={image} fluid />\r\n        </Link>\r\n      </Col>\r\n      <Col xs={9} md={3}>\r\n        <Link to={`/product/${_id}`}>\r\n          <h6>{name}</h6>\r\n        </Link>\r\n      </Col>\r\n      <Col\r\n        xs={5}\r\n        md={{ span: 4, offset: 0 }}\r\n        className={\r\n          'justify-content-center text-align-center d-flex flex-row-reverse'\r\n        }\r\n      >\r\n        <QuantitySelector\r\n          currentQuantity={qtyInCart}\r\n          maxQty={countInStock}\r\n          setQuantity={dispatchWithProduct}\r\n        />\r\n      </Col>\r\n      <Col xs={3} sm={{ span: 2 }} className={'text-right text-nowrap'}>\r\n        $ {formatMoney(price * qtyInCart)}{' '}\r\n      </Col>\r\n      <Col xs={1} className=\"d-flex justify-content-right\">\r\n        <Image\r\n          src=\"./images/removeIcon.png\"\r\n          className=\"ml-auto\"\r\n          style={{ width: '.7rem', height: '.7rem', cursor: 'pointer' }}\r\n          onClick={handleRemoveButton}\r\n        ></Image>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ListGroup, Button, Row, Card, Col, Container } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CartItem from '../components/CartItem';\r\nimport Message from '../components/Message';\r\nimport { clearCart } from '../actions/cartActions';\r\nimport { formatMoney } from '../utilities';\r\n\r\nexport default function CartScreen() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cartItems = useSelector((state) => state.cart.cartItems);\r\n\r\n  const cartListItems = [];\r\n  for (const id in cartItems) {\r\n    cartListItems.push(\r\n      <ListGroup.Item>\r\n        <CartItem key={id} product={cartItems[id]} />\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    dispatch(clearCart());\r\n  };\r\n\r\n  const handleCheckout = (e) => {\r\n    // Go to login screen unless already logged in\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n  const addTotal = (acc, curId) => {\r\n    const { price, qtyInCart: qty } = cartItems[curId];\r\n    return acc + parseFloat(price) * qty;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4>Shopping Cart</h4>\r\n      {cartListItems.length === 0 ? (\r\n        <Message>\r\n          You're cart is empty!{'    '}\r\n          <Link to=\"/\">{`     `}Go Home.</Link>\r\n        </Message>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"flex-row-reverse\">\r\n            <Button variant=\"light\" size=\"sm\" onClick={handleClear}>\r\n              Clear Cart\r\n            </Button>\r\n          </Row>\r\n          <ListGroup variant=\"flush\">{cartListItems}</ListGroup>\r\n          <Row className=\"d-flex justify-content-end align-items-right\">\r\n            <Col xs={12} md={5}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title className=\"text-right\">\r\n                    Subtotal: $\r\n                    {formatMoney(Object.keys(cartItems).reduce(addTotal, 0))}\r\n                  </Card.Title>{' '}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"btn-block\"\r\n                    onClick={handleCheckout}\r\n                    auto\r\n                  >\r\n                    Proceed To Checkout\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n              <Col xs={12} md={6}>{ children }</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Change Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h5>Shipping</h5>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push('/orders');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nimport { formatMoney } from '../utilities';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n  //   Calculate prices\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const addTotal = (acc, curId) => {\r\n    const { price, qtyInCart: qty } = cart.cartItems[curId];\r\n    return acc + parseFloat(price) * qty;\r\n  };\r\n  cart.itemsPrice = formatMoney(\r\n    Object.keys(cart.cartItems).reduce(addTotal, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Subtotal</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <><Row><Col className='px-4'>\r\n      <h3>Order {order._id}</h3></Col></Row>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h4>Shipping</h4>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong><br />\r\n                {order.shippingAddress.address}, <br />{order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h4>Payment</h4>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h4>Order Items</h4>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>Order Summary</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart\" component={CartScreen} />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/orders\" component={PlaceOrderScreen} />\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}